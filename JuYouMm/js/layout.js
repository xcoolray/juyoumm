// Generated by CoffeeScript 1.4.0
var GAME_HEIGHT, GAME_WIDTH, MJ_LAYOUTS, MahjongScreen,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

GAME_WIDTH = 640;

GAME_HEIGHT = 640;

MJ_LAYOUTS = {
  tehai_0: {
    rotation: 0,
    x: 320 - 210,
    y: 600 - 26
  },
  tehai_1: {
    rotation: 3,
    x: 570 - 210,
    y: 320 - 26
  },
  tehai_2: {
    rotation: 2,
    x: 320 - 210,
    y: 60 - 26
  },
  tehai_3: {
    rotation: 1,
    x: 70 - 210,
    y: 320 - 26
  },
  kawa_0: {
    rotation: 0,
    x: 248,
    y: 392
  },
  kawa_1: {
    rotation: 3,
    x: 392,
    y: 392
  },
  kawa_2: {
    rotation: 2,
    x: 392,
    y: 248
  },
  kawa_3: {
    rotation: 1,
    x: 248,
    y: 248
  },
  button: {
    rotation: 0,
    x: 200,
    y: 530
  },
  kyoku_label: {
    rotation: 0,
    x: 280,
    y: 370,
    fontsize: 20
  },
  score_0: {
    x: 300,
    y: 360
  },
  score_1: {
    x: 300,
    y: 280
  },
  score_2: {
    x: 260,
    y: 320
  },
  score_3: {
    x: 340,
    y: 320
  }
};

MahjongScreen = (function(_super) {

  __extends(MahjongScreen, _super);

  function MahjongScreen() {
    return MahjongScreen.__super__.constructor.apply(this, arguments);
  }

  MahjongScreen.prototype.addChild = function(n) {
    if (MJ_LAYOUTS[n.layout_id]) {
      n.rotation = MJ_LAYOUTS[n.layout_id].rotation * 90;
      if (MJ_LAYOUTS[n.layout_id].fontsize) {
        n.font = MJ_LAYOUTS[n.layout_id].fontsize + "px メイリオ";
      }
      n.moveBy(MJ_LAYOUTS[n.layout_id].x, MJ_LAYOUTS[n.layout_id].y);
    }
    return MahjongScreen.__super__.addChild.apply(this, arguments);
  };

  return MahjongScreen;

})(Scene);
